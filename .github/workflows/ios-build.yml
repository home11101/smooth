name: iOS Build and Sign

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        
    - name: Install Fastlane
      run: |
        gem install fastlane
        
    - name: Install dependencies
      run: |
        flutter pub get
        cd ios
        pod install
      
    - name: Setup code signing
      run: |
        # Create keychain for code signing
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings build.keychain
        
        # Import certificate
        echo "${{ secrets.DISTRIBUTION_CERTIFICATE }}" | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "${{ secrets.CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
        
        # Set key partition list (ignore specific error that doesn't affect signing)
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain || true
        
        # Install provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo "${{ secrets.PROVISIONING_PROFILE }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
        
        # Clean up
        rm certificate.p12
        
        # Set environment variables for Xcode
        echo "DEVELOPMENT_TEAM=7BHY8D9X9V" >> $GITHUB_ENV
        echo "CODE_SIGN_STYLE=Automatic" >> $GITHUB_ENV
        echo "APPLE_ID=${{ secrets.APPLE_ID }}" >> $GITHUB_ENV
        
    - name: Configure Apple account for automatic signing
      run: |
        # Set environment variables for Xcode
        export DEVELOPER_DIR="/Applications/Xcode_15.4.app/Contents/Developer"
        export PATH="$DEVELOPER_DIR/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin"
        
        # Set environment variables for the build
        echo "DEVELOPMENT_TEAM=7BHY8D9X9V" >> $GITHUB_ENV
        echo "CODE_SIGN_STYLE=Automatic" >> $GITHUB_ENV
        echo "APPLE_ID=${{ secrets.APPLE_ID }}" >> $GITHUB_ENV
        
    - name: Configure Xcode account
      run: |
        # Try to configure Xcode account using different methods
        xcrun simctl list devices
        xcrun xcodebuild -version
        
        # Try to resolve dependencies and configure account
        cd ios
        xcrun xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -resolvePackageDependencies
        
        # Show build settings to verify configuration
        xcrun xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -destination generic/platform=iOS \
          -allowProvisioningUpdates \
          -allowProvisioningDeviceRegistration \
          DEVELOPMENT_TEAM="7BHY8D9X9V" \
          CODE_SIGN_STYLE="Automatic" \
          -showBuildSettings | grep -E "(DEVELOPMENT_TEAM|CODE_SIGN_STYLE|PRODUCT_BUNDLE_IDENTIFIER)"
        
    - name: Debug Xcode accounts and profiles
      run: |
        echo "=== Available signing identities ==="
        security find-identity -v -p codesigning
        echo "=== Installed provisioning profiles ==="
        ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
        echo "=== Keychain list ==="
        security list-keychains
        
    - name: Build iOS app
      run: |
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -destination generic/platform=iOS \
          DEVELOPMENT_TEAM="7BHY8D9X9V" \
          CODE_SIGN_STYLE="Manual" \
          CODE_SIGN_IDENTITY="iPhone Distribution" \
          PROVISIONING_PROFILE_SPECIFIER="profile" \
          build
        
    - name: Archive and sign
      run: |
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -archivePath Runner.xcarchive \
                   -destination generic/platform=iOS \
                   -allowProvisioningUpdates \
                   -allowProvisioningDeviceRegistration \
                   DEVELOPMENT_TEAM="7BHY8D9X9V" \
                   CODE_SIGN_STYLE="Automatic" \
                   archive
                   
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath Runner.xcarchive \
                   -exportPath ./build/ios/ipa \
                   -exportOptionsPlist exportOptions.plist \
                   -allowProvisioningUpdates \
                   -allowProvisioningDeviceRegistration \
                   DEVELOPMENT_TEAM="7BHY8D9X9V"
                   
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: smooth-ai-ipa
        path: ios/build/ios/ipa/Runner.ipa
        
    - name: Upload to App Store Connect
      if: github.ref == 'refs/heads/main'
      run: |
        xcrun altool --upload-app \
                     --type ios \
                     --file ios/build/ios/ipa/Runner.ipa \
                     --username "${{ secrets.APPLE_ID }}" \
                     --password "${{ secrets.APP_SPECIFIC_PASSWORD }}" \
                     --asc-provider "7BHY8D9X9V" 