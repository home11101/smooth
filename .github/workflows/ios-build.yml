name: iOS Build and Sign

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Setup iOS certificates
      run: |
        # Create keychain
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings build.keychain
        
        # Import distribution certificate (only if secrets are available)
        if [ -n "${{ secrets.DISTRIBUTION_CERTIFICATE }}" ]; then
          echo "${{ secrets.DISTRIBUTION_CERTIFICATE }}" | base64 -d > distribution.cer
          security import distribution.cer -k build.keychain -T /usr/bin/codesign
        else
          echo "‚ö†Ô∏è  No distribution certificate found, building without code signing"
        fi
        
        # Import provisioning profile (only if secrets are available)
        if [ -n "${{ secrets.PROVISIONING_PROFILE }}" ]; then
          echo "${{ secrets.PROVISIONING_PROFILE }}" | base64 -d > Smooth_AI_App_Store-2.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp Smooth_AI_App_Store-2.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        else
          echo "‚ö†Ô∏è  No provisioning profile found, building without code signing"
        fi
        
        # Set code signing identity (only if certificate was imported)
        if [ -f "distribution.cer" ]; then
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain
        fi
        
    - name: Build iOS app
      run: |
        cd ios
        flutter build ios --release --no-codesign
        
    - name: Archive and sign
      run: |
        cd ios
        if [ -n "${{ secrets.DISTRIBUTION_CERTIFICATE }}" ] && [ -n "${{ secrets.PROVISIONING_PROFILE }}" ]; then
          # Full signing
          xcodebuild -workspace Runner.xcworkspace \
                     -scheme Runner \
                     -configuration Release \
                     -archivePath Runner.xcarchive \
                     -destination generic/platform=iOS \
                     -allowProvisioningUpdates \
                     -allowProvisioningDeviceRegistration \
                     CODE_SIGN_IDENTITY="Apple Distribution: Henri-Vincent Kanda (7BHY8D9X9V)" \
                     PROVISIONING_PROFILE_SPECIFIER="Smooth_AI_App_Store-2" \
                     DEVELOPMENT_TEAM="7BHY8D9X9V" \
                     archive
        else
          # Build without signing
          echo "üî® Building archive without code signing..."
          xcodebuild -workspace Runner.xcworkspace \
                     -scheme Runner \
                     -configuration Release \
                     -archivePath Runner.xcarchive \
                     -destination generic/platform=iOS \
                     archive
        fi
                   
    - name: Export IPA
      run: |
        cd ios
        if [ -n "${{ secrets.DISTRIBUTION_CERTIFICATE }}" ] && [ -n "${{ secrets.PROVISIONING_PROFILE }}" ]; then
          # Export with signing
          xcodebuild -exportArchive \
                     -archivePath Runner.xcarchive \
                     -exportPath ./build/ios/ipa \
                     -exportOptionsPlist exportOptions.plist
        else
          # Export without signing (for testing)
          echo "üì¶ Creating unsigned IPA for testing..."
          mkdir -p ./build/ios/ipa
          cp Runner.xcarchive/Products/Applications/Runner.app ./build/ios/ipa/
          cd ./build/ios/ipa
          zip -r Runner.ipa Runner.app
          cd ../../..
        fi
        
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: smooth-ai-ipa
        path: ios/build/ios/ipa/Runner.ipa
        
    - name: Upload to App Store Connect
      if: github.ref == 'refs/heads/main' && secrets.DISTRIBUTION_CERTIFICATE != ''
      run: |
        xcrun altool --upload-app \
                     --type ios \
                     --file ios/build/ios/ipa/Runner.ipa \
                     --username "${{ secrets.APPLE_ID }}" \
                     --password "${{ secrets.APP_SPECIFIC_PASSWORD }}" \
                     --asc-provider "7BHY8D9X9V" 