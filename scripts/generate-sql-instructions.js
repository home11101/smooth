const fs = require('fs');

async function generateSQLInstructions() {
  try {
    console.log('üìù G√©n√©ration des instructions SQL pour Supabase...\n');

    // Lire le script SQL complet
    const sqlPath = './scripts/setup-referral-system.sql';
    const sqlContent = fs.readFileSync(sqlPath, 'utf8');

    // Diviser en sections
    const sections = sqlContent.split('-- =====================================================');

    console.log('üéØ Instructions pour configurer le syst√®me de parrainage :\n');
    console.log('1Ô∏è‚É£ Allez dans votre dashboard Supabase');
    console.log('2Ô∏è‚É£ Cliquez sur "SQL Editor" dans le menu de gauche');
    console.log('3Ô∏è‚É£ Cliquez sur "New query"');
    console.log('4Ô∏è‚É£ Copiez-collez le script SQL suivant :\n');
    console.log('='.repeat(80));
    console.log(sqlContent);
    console.log('='.repeat(80));
    console.log('\n5Ô∏è‚É£ Cliquez sur "Run" pour ex√©cuter le script');
    console.log('6Ô∏è‚É£ V√©rifiez que toutes les tables et fonctions ont √©t√© cr√©√©es');

    // Cr√©er un fichier de sortie
    const outputPath = './scripts/supabase-setup-instructions.md';
    const instructions = `# Instructions de Setup Supabase - Syst√®me de Parrainage

## √âtapes √† suivre :

1. **Acc√©dez √† votre dashboard Supabase**
   - Allez sur https://supabase.com/dashboard
   - S√©lectionnez votre projet Smooth AI

2. **Ouvrez l'√©diteur SQL**
   - Cliquez sur "SQL Editor" dans le menu de gauche
   - Cliquez sur "New query"

3. **Copiez-collez le script SQL suivant :**

\`\`\`sql
${sqlContent}
\`\`\`

4. **Ex√©cutez le script**
   - Cliquez sur le bouton "Run" (‚ñ∂Ô∏è)
   - Attendez que toutes les requ√™tes s'ex√©cutent

5. **V√©rifiez la cr√©ation**
   - Allez dans "Table Editor"
   - V√©rifiez que les tables suivantes existent :
     - \`referral_codes\`
     - \`referral_usage\`
     - \`user_referral_points\`
     - \`referral_rewards\`

6. **Testez les fonctions**
   - Retournez dans "SQL Editor"
   - Ex√©cutez le script de test : \`scripts/test-referral-system.sql\`

## Tables cr√©√©es :

- **referral_codes** : Codes de parrainage des utilisateurs
- **referral_usage** : Historique des utilisations de codes
- **user_referral_points** : Points de parrainage des utilisateurs
- **referral_rewards** : R√©compenses et r√©ductions appliqu√©es

## Fonctions cr√©√©es :

- **create_referral_code(device_id)** : G√©n√®re un code de parrainage
- **use_referral_code(code, device_id, subscription_type)** : Utilise un code
- **get_user_referral_stats(device_id)** : R√©cup√®re les statistiques
- **apply_referral_discount(device_id, points, payment_id)** : Applique une r√©duction

## Vues cr√©√©es :

- **referral_admin_stats** : Statistiques pour l'administration
- **referral_rewards_used** : Historique des r√©compenses

---

*Script g√©n√©r√© automatiquement le ${new Date().toLocaleString()}*
`;

    fs.writeFileSync(outputPath, instructions);
    console.log(`\n‚úÖ Instructions sauvegard√©es dans : ${outputPath}`);

    // Cr√©er aussi un fichier SQL s√©par√© pour faciliter le copier-coller
    const sqlOutputPath = './scripts/supabase-referral-setup.sql';
    fs.writeFileSync(sqlOutputPath, sqlContent);
    console.log(`‚úÖ Script SQL sauvegard√© dans : ${sqlOutputPath}`);

    console.log('\nüéØ Prochaines √©tapes :');
    console.log('1. Ouvrez le fichier supabase-referral-setup.sql');
    console.log('2. Copiez tout le contenu');
    console.log('3. Collez-le dans l\'√©diteur SQL de Supabase');
    console.log('4. Ex√©cutez le script');

  } catch (error) {
    console.error('‚ùå Erreur lors de la g√©n√©ration des instructions:', error);
  }
}

async function testAfterSetup() {
  try {
    console.log('\nüß™ Script de test apr√®s setup :\n');

    const testSQL = fs.readFileSync('./scripts/test-referral-system.sql', 'utf8');

    console.log('üìã Pour tester le syst√®me apr√®s setup :\n');
    console.log('1. Dans l\'√©diteur SQL de Supabase, cr√©ez une nouvelle requ√™te');
    console.log('2. Copiez-collez le script de test suivant :\n');
    console.log('='.repeat(80));
    console.log(testSQL);
    console.log('='.repeat(80));
    console.log('\n3. Ex√©cutez le script de test');
    console.log('4. V√©rifiez que tous les tests passent');

  } catch (error) {
    console.error('‚ùå Erreur lors de la g√©n√©ration du script de test:', error);
  }
}

async function main() {
  try {
    await generateSQLInstructions();
    await testAfterSetup();

    console.log('\nüéä G√©n√©ration termin√©e !');
    console.log('\nüìã R√©sum√© :');
    console.log('- Instructions : scripts/supabase-setup-instructions.md');
    console.log('- Script SQL : scripts/supabase-referral-setup.sql');
    console.log('- Script de test : scripts/test-referral-system.sql');

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }
}

main(); 