// Corrige ou commente l'import si le fichier n'existe pas
// import '../utils/app_theme.dart';

import 'package:flutter/material.dart';
import 'dart:async';
import 'dart:math';
import 'package:shared_preferences/shared_preferences.dart';
import '../main_navigation_screen.dart';

void main() {
  runApp(const FigmaToCodeApp());
}

// Generated by: https://www.figma.com/community/plugin/842128343887142055/
class FigmaToCodeApp extends StatelessWidget {
  const FigmaToCodeApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: const Color.fromARGB(255, 18, 32, 47),
      ),
      home: Scaffold(
        body: ListView(children: const [
          SplashScreen1(),
        ]),
      ),
    );
  }
}

class SplashScreen1 extends StatefulWidget {
  const SplashScreen1({super.key});

  @override
  State<SplashScreen1> createState() => _SplashScreen1State();
}

class _SplashScreen1State extends State<SplashScreen1> with TickerProviderStateMixin {
  late AnimationController _scanController;
  late AnimationController _fadeController;
  double _opacity = 1.0;

  @override
  void initState() {
    super.initState();
    _scanController = AnimationController(
      vsync: this,
      duration: const Duration(seconds: 5),
    )..forward();

    _fadeController = AnimationController(
      vsync: this,
      duration: const Duration(milliseconds: 800),
    );

    Timer(const Duration(seconds: 5), () {
      _fadeController.forward();
      setState(() => _opacity = 0.0);
      Future.delayed(const Duration(milliseconds: 800), () async {
        if (mounted) {
          final prefs = await SharedPreferences.getInstance();
          final hasSeenOnboarding = prefs.getBool('hasSeenOnboarding') ?? false;
          if (hasSeenOnboarding) {
            Navigator.of(context).pushReplacement(
              MaterialPageRoute(builder: (_) => const MainNavigationScreen()),
            );
          } else {
            await prefs.setBool('hasSeenOnboarding', true);
            Navigator.of(context).pushReplacementNamed('/onboarding');
          }
        }
      });
    });
  }

  @override
  void dispose() {
    _scanController.dispose();
    _fadeController.dispose();
    super.dispose();
  }

  Widget _buildParticles() {
    return SizedBox(
      width: 260,
      height: 260,
      child: Stack(
        children: List.generate(14, (i) {
          final angle = 2 * pi * i / 14;
          return AnimatedBuilder(
            animation: _scanController,
            builder: (context, child) {
              final orbit = 100 + 10 * sin(_scanController.value * 2 * pi + angle * 2);
              return Positioned(
                left: 130 + orbit * cos(angle) - 6,
                top: 130 + orbit * sin(angle) - 6,
                child: Container(
                  width: 10,
                  height: 10,
                  decoration: BoxDecoration(
                    color: Colors.cyanAccent.withOpacity(0.18 + 0.18 * sin(_scanController.value * 2 * pi + angle)),
                    shape: BoxShape.circle,
                    boxShadow: [
                      BoxShadow(
                        color: Colors.cyanAccent.withOpacity(0.25),
                        blurRadius: 8,
                        spreadRadius: 2,
                      ),
                    ],
                  ),
                ),
              );
            },
          );
        }),
      ),
    );
  }

  Widget _buildScanEffect() {
    return AnimatedBuilder(
      animation: _scanController,
      builder: (context, child) {
        final scanY = 80 + 100 * _scanController.value;
        return Positioned(
          left: 0,
          right: 0,
          top: scanY,
          child: Opacity(
            opacity: 0.5 * (1 - (_scanController.value - 0.5).abs()),
            child: Container(
              height: 28,
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  colors: [
                    Colors.cyanAccent.withOpacity(0.0),
                    Colors.cyanAccent.withOpacity(0.7),
                    Colors.cyanAccent.withOpacity(0.0),
                  ],
                  begin: Alignment.centerLeft,
                  end: Alignment.centerRight,
                ),
              ),
            ),
          ),
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFF121F2F),
      body: AnimatedOpacity(
        opacity: _opacity,
        duration: const Duration(milliseconds: 800),
        child: Stack(
          fit: StackFit.expand,
          children: [
            // Dégradé animé
            AnimatedBuilder(
              animation: _scanController,
              builder: (context, child) {
                return Container(
                  decoration: BoxDecoration(
                    gradient: LinearGradient(
                      begin: Alignment.topLeft,
                      end: Alignment.bottomRight,
                      colors: [
                        Color.lerp(const Color(0xFF121F2F), const Color(0xFF00E1FF), 0.5 + 0.5 * sin(_scanController.value * 2 * pi))!,
                        Color.lerp(const Color(0xFF00E1FF), const Color(0xFF7F5FFF), 0.5 + 0.5 * cos(_scanController.value * 2 * pi))!,
                        Color.lerp(const Color(0xFF7F5FFF), const Color(0xFF121F2F), 0.5 + 0.5 * sin(_scanController.value * 2 * pi + pi / 2))!,
                      ],
                    ),
                  ),
                );
              },
            ),
            Center(
              child: Stack(
                alignment: Alignment.center,
                children: [
                  _buildParticles(),
                  Container(
                    width: 160,
                    height: 160,
                    decoration: BoxDecoration(
                      shape: BoxShape.circle,
                      boxShadow: [
                        BoxShadow(
                          color: Colors.cyanAccent.withOpacity(0.5),
                          blurRadius: 48,
                          spreadRadius: 16,
                        ),
                      ],
                      gradient: const RadialGradient(
                        colors: [
                          Color(0xFF00E1FF),
                          Color(0xFF121F2F),
                        ],
                        radius: 0.8,
                      ),
                    ),
                    child: Padding(
                      padding: const EdgeInsets.all(24.0),
                      child: Image.asset(
                        'assets/images/logo.png',
                        fit: BoxFit.contain,
                      ),
                    ),
                  ),
                  _buildScanEffect(),
                  Positioned(
                    bottom: -70,
                    child: FadeTransition(
                      opacity: Tween<double>(begin: 0, end: 1).animate(
                        CurvedAnimation(
                          parent: _scanController,
                          curve: const Interval(0.3, 0.8, curve: Curves.easeIn),
                        ),
                      ),
                      child: Text(
                        "Smooth AI – L'assistant de rencontres intelligent",
                        style: TextStyle(
                          color: Colors.white.withOpacity(0.92),
                          fontWeight: FontWeight.bold,
                          fontSize: 18,
                          letterSpacing: 1.1,
                          shadows: [
                            Shadow(
                              color: Colors.black.withOpacity(0.3),
                              blurRadius: 8,
                            ),
                          ],
                        ),
                        textAlign: TextAlign.center,
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}